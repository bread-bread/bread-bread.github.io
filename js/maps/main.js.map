{"version":3,"sources":["jquery.accordion.js","jquery.maskedinput.js"],"names":["init","myMap","ymaps","Map","center","zoom","behaviors","disable","myPlacemark1","Placemark","hintContent","iconLayout","iconImageHref","iconImageSize","iconImageOffset","myPlacemark2","myPlacemark3","myPlacemark4","geoObjects","add","$","window","document","undefined","Accordion","element","options","this","extend","defaults","_defaults","_name","pluginName","transitionSpeed","transitionEasing","controlElement","contentElement","groupElement","singleOpen","prototype","debounce","func","threshold","execAsap","timeout","delayed","apply","obj","args","arguments","clearTimeout","setTimeout","requestAnimFrame","cb","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","toggleTransition","$el","remove","$content","css","-webkit-transition","transition","opts","calculateHeight","height","children","each","outerHeight","data","updateParentHeight","$parentAccordion","$currentAccordion","qty","operation","$matched","filter","find","$childs","not","siblings","hasClass","currentHeight","refreshHeight","$accordion","closeAccordion","trigger","CSStransitions","accordionHasParent","parents","closedCSS","removeClass","animate","openAccordion","addClass","max-height","closeSiblingAccordions","closest","$siblings","$siblingsChildren","$otherAccordions","toggleAccordion","isAccordionGroup","length","self","$controls","overflow","s","body","documentElement","style","p","v","i","$curr","attr","on","fn","jQuery","factory","define","amd","exports","require","caretTimeoutId","ua","navigator","userAgent","iPhone","test","chrome","android","mask","definitions","9","a","*","autoclear","dataName","placeholder","caret","begin","end","range","is","setSelectionRange","createTextRange","collapse","moveEnd","moveStart","select","selectionStart","selectionEnd","selection","createRange","duplicate","text","unmask","settings","input","defs","tests","partialPosition","firstNonMaskPos","lastRequiredNonMaskPos","len","oldVal","completed","split","c","push","RegExp","tryFireCompleted","buffer","getPlaceholder","call","charAt","seekNext","pos","seekPrev","shiftL","j","writeBuffer","Math","max","shiftR","t","androidInputEvent","curVal","val","checkVal","blurEvent","focusText","change","keydownEvent","e","prop","k","which","keyCode","clearBuffer","preventDefault","keypressEvent","next","ctrlKey","altKey","metaKey","String","fromCharCode","proxy","start","join","allow","lastMatch","defaultBuffer","substring","map","one","off","removeData","get","activeElement","replace","moveSlide","container","slideNum","items","activeSlide","reqItem","eq","reqIndex","index","list","left","existedItem","edgeItem","$this","activeItem","prev","first","last","sections","display","inScroll","scrollToSection","sectionEq","position","transform","deltaY","originalEvent","activeSection","nextSection","prevSection","href","parseInt","accordion","item","content","activeContent","width","target","fancybox","type","maxWidth","fitToView","padding","close","ready","form","formData","serialize","ajax","url","success","modal","status","open","afterClose"],"mappings":"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","file":"../main.js","sourcesContent":["/*!\n * jQuery Accordion 0.0.1\n * (c) 2014 Victor Fernandez <victor@vctrfrnndz.com>\n * MIT Licensed.\n */\n\n;(function ( $, window, document, undefined ) {\n\n    var pluginName = 'accordion',\n        defaults = {\n            transitionSpeed: 500,\n            transitionEasing: 'ease',\n            controlElement: '[data-control]',\n            contentElement: '[data-content]',\n            groupElement: '[data-accordion-group]',\n            singleOpen: true\n        };\n\n    function Accordion(element, options) {\n        this.element = element;\n        this.options = $.extend({}, defaults, options);\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Accordion.prototype.init = function () {\n        var self = this,\n            opts = self.options;\n\n        var $accordion = $(self.element),\n            $controls = $accordion.find('> ' + opts.controlElement),\n            $content =  $accordion.find('> ' + opts.contentElement);\n\n        var accordionParentsQty = $accordion.parents('[data-accordion]').length,\n            accordionHasParent = accordionParentsQty > 0;\n\n        var closedCSS = { 'max-height': 0, 'overflow': 'hidden' };\n\n        var CSStransitions = supportsTransitions();\n\n        function debounce(func, threshold, execAsap) {\n            var timeout;\n\n            return function debounced() {\n                var obj = this,\n                    args = arguments;\n\n                function delayed() {\n                    if (!execAsap) func.apply(obj, args);\n                    timeout = null;\n                };\n\n                if (timeout) clearTimeout(timeout);\n                else if (execAsap) func.apply(obj, args);\n\n                timeout = setTimeout(delayed, threshold || 200);\n            };\n        }\n\n        function supportsTransitions() {\n            var b = document.body || document.documentElement,\n                s = b.style,\n                p = 'transition';\n\n            if (typeof s[p] == 'string') {\n                return true;\n            }\n\n            var v = ['Moz', 'webkit', 'Webkit', 'Khtml', 'O', 'ms'];\n\n            p = 'Transition';\n\n            for (var i=0; i<v.length; i++) {\n                if (typeof s[v[i] + p] == 'string') {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function requestAnimFrame(cb) {\n            if(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame) {\n                return  requestAnimationFrame(cb) ||\n                        webkitRequestAnimationFrame(cb) ||\n                        mozRequestAnimationFrame(cb);\n            } else {\n                return setTimeout(cb, 1000 / 60);\n            }\n        }\n\n        function toggleTransition($el, remove) {\n            if(!remove) {\n                $content.css({\n                    '-webkit-transition': 'max-height ' + opts.transitionSpeed + 'ms ' + opts.transitionEasing,\n                    'transition': 'max-height ' + opts.transitionSpeed + 'ms ' + opts.transitionEasing\n                });\n            } else {\n                $content.css({\n                    '-webkit-transition': '',\n                    'transition': ''\n                });\n            }\n        }\n\n        function calculateHeight($el) {\n            var height = 0;\n\n            $el.children().each(function() {\n                height = height + $(this).outerHeight(true);\n            });\n\n            $el.data('oHeight', height);\n        }\n\n        function updateParentHeight($parentAccordion, $currentAccordion, qty, operation) {\n            var $content = $parentAccordion.filter('.open').find('> [data-content]'),\n                $childs = $content.find('[data-accordion].open > [data-content]'),\n                $matched;\n\n            if(!opts.singleOpen) {\n                $childs = $childs.not($currentAccordion.siblings('[data-accordion].open').find('> [data-content]'));\n            }\n\n            $matched = $content.add($childs);\n\n            if($parentAccordion.hasClass('open')) {\n                $matched.each(function() {\n                    var currentHeight = $(this).data('oHeight');\n\n                    switch (operation) {\n                        case '+':\n                            $(this).data('oHeight', currentHeight + qty);\n                            break;\n                        case '-':\n                            $(this).data('oHeight', currentHeight - qty);\n                            break;\n                        default:\n                            throw 'updateParentHeight method needs an operation';\n                    }\n\n                    $(this).css('max-height', $(this).data('oHeight'));\n                });\n            }\n        }\n\n        function refreshHeight($accordion) {\n            if($accordion.hasClass('open')) {\n                var $content = $accordion.find('> [data-content]'),\n                    $childs = $content.find('[data-accordion].open > [data-content]'),\n                    $matched = $content.add($childs);\n\n                calculateHeight($matched);\n\n                $matched.css('max-height', $matched.data('oHeight'));\n            }\n        }\n\n        function closeAccordion($accordion, $content) {\n            $accordion.trigger('accordion.close');\n            \n            if(CSStransitions) {\n                if(accordionHasParent) {\n                    var $parentAccordions = $accordion.parents('[data-accordion]');\n\n                    updateParentHeight($parentAccordions, $accordion, $content.data('oHeight'), '-');\n                }\n\n                $content.css(closedCSS);\n\n                $accordion.removeClass('open');\n            } else {\n                $content.css('max-height', $content.data('oHeight'));\n\n                $content.animate(closedCSS, opts.transitionSpeed);\n\n                $accordion.removeClass('open');\n            }\n        }\n\n        function openAccordion($accordion, $content) {\n            $accordion.trigger('accordion.open');\n            if(CSStransitions) {\n                toggleTransition($content);\n\n                if(accordionHasParent) {\n                    var $parentAccordions = $accordion.parents('[data-accordion]');\n\n                    updateParentHeight($parentAccordions, $accordion, $content.data('oHeight'), '+');\n                }\n\n                requestAnimFrame(function() {\n                    $content.css('max-height', $content.data('oHeight'));\n                });\n\n                $accordion.addClass('open');\n            } else {\n                $content.animate({\n                    'max-height': $content.data('oHeight')\n                }, opts.transitionSpeed, function() {\n                    $content.css({'max-height': 'none'});\n                });\n\n                $accordion.addClass('open');\n            }\n        }\n\n        function closeSiblingAccordions($accordion) {\n            var $accordionGroup = $accordion.closest(opts.groupElement);\n\n            var $siblings = $accordion.siblings('[data-accordion]').filter('.open'),\n                $siblingsChildren = $siblings.find('[data-accordion]').filter('.open');\n\n            var $otherAccordions = $siblings.add($siblingsChildren);\n\n            $otherAccordions.each(function() {\n                var $accordion = $(this),\n                    $content = $accordion.find(opts.contentElement);\n\n                closeAccordion($accordion, $content);\n            });\n\n            $otherAccordions.removeClass('open');\n        }\n\n        function toggleAccordion() {\n            var isAccordionGroup = (opts.singleOpen) ? $accordion.parents(opts.groupElement).length > 0 : false;\n\n            calculateHeight($content);\n\n            if(isAccordionGroup) {\n                closeSiblingAccordions($accordion);\n            }\n\n            if($accordion.hasClass('open')) {\n                closeAccordion($accordion, $content);\n            } else {\n                openAccordion($accordion, $content);\n            }\n        }\n\n        function addEventListeners() {\n            $controls.on('click', toggleAccordion);\n            \n            $controls.on('accordion.toggle', function() {\n                if(opts.singleOpen && $controls.length > 1) {\n                    return false;\n                }\n                \n                toggleAccordion();\n            });\n            \n            $controls.on('accordion.refresh', function() {\n                refreshHeight($accordion);\n            });\n\n            $(window).on('resize', debounce(function() {\n                refreshHeight($accordion);\n            }));\n        }\n\n        function setup() {\n            $content.each(function() {\n                var $curr = $(this);\n\n                if($curr.css('max-height') != 0) {\n                    if(!$curr.closest('[data-accordion]').hasClass('open')) {\n                        $curr.css({ 'max-height': 0, 'overflow': 'hidden' });\n                    } else {\n                        toggleTransition($curr);\n                        calculateHeight($curr);\n\n                        $curr.css('max-height', $curr.data('oHeight'));\n                    }\n                }\n            });\n\n\n            if(!$accordion.attr('data-accordion')) {\n                $accordion.attr('data-accordion', '');\n                $accordion.find(opts.controlElement).attr('data-control', '');\n                $accordion.find(opts.contentElement).attr('data-content', '');\n            }\n        }\n\n        setup();\n        addEventListeners();\n    };\n\n    $.fn[pluginName] = function ( options ) {\n        return this.each(function () {\n            if (!$.data(this, 'plugin_' + pluginName)) {\n                $.data(this, 'plugin_' + pluginName,\n                new Accordion( this, options ));\n            }\n        });\n    }\n\n})( jQuery, window, document );\n","/*\r\n    jQuery Masked Input Plugin\r\n    Copyright (c) 2007 - 2015 Josh Bush (digitalbush.com)\r\n    Licensed under the MIT license (http://digitalbush.com/projects/masked-input-plugin/#license)\r\n    Version: 1.4.1\r\n*/\r\n!function(factory) {\r\n    \"function\" == typeof define && define.amd ? define([ \"jquery\" ], factory) : factory(\"object\" == typeof exports ? require(\"jquery\") : jQuery);\r\n}(function($) {\r\n    var caretTimeoutId, ua = navigator.userAgent, iPhone = /iphone/i.test(ua), chrome = /chrome/i.test(ua), android = /android/i.test(ua);\r\n    $.mask = {\r\n        definitions: {\r\n            \"9\": \"[0-9]\",\r\n            a: \"[A-Za-z]\",\r\n            \"*\": \"[A-Za-z0-9]\"\r\n        },\r\n        autoclear: !0,\r\n        dataName: \"rawMaskFn\",\r\n        placeholder: \"_\"\r\n    }, $.fn.extend({\r\n        caret: function(begin, end) {\r\n            var range;\r\n            if (0 !== this.length && !this.is(\":hidden\")) return \"number\" == typeof begin ? (end = \"number\" == typeof end ? end : begin, \r\n            this.each(function() {\r\n                this.setSelectionRange ? this.setSelectionRange(begin, end) : this.createTextRange && (range = this.createTextRange(), \r\n                range.collapse(!0), range.moveEnd(\"character\", end), range.moveStart(\"character\", begin), \r\n                range.select());\r\n            })) : (this[0].setSelectionRange ? (begin = this[0].selectionStart, end = this[0].selectionEnd) : document.selection && document.selection.createRange && (range = document.selection.createRange(), \r\n            begin = 0 - range.duplicate().moveStart(\"character\", -1e5), end = begin + range.text.length), \r\n            {\r\n                begin: begin,\r\n                end: end\r\n            });\r\n        },\r\n        unmask: function() {\r\n            return this.trigger(\"unmask\");\r\n        },\r\n        mask: function(mask, settings) {\r\n            var input, defs, tests, partialPosition, firstNonMaskPos, lastRequiredNonMaskPos, len, oldVal;\r\n            if (!mask && this.length > 0) {\r\n                input = $(this[0]);\r\n                var fn = input.data($.mask.dataName);\r\n                return fn ? fn() : void 0;\r\n            }\r\n            return settings = $.extend({\r\n                autoclear: $.mask.autoclear,\r\n                placeholder: $.mask.placeholder,\r\n                completed: null\r\n            }, settings), defs = $.mask.definitions, tests = [], partialPosition = len = mask.length, \r\n            firstNonMaskPos = null, $.each(mask.split(\"\"), function(i, c) {\r\n                \"?\" == c ? (len--, partialPosition = i) : defs[c] ? (tests.push(new RegExp(defs[c])), \r\n                null === firstNonMaskPos && (firstNonMaskPos = tests.length - 1), partialPosition > i && (lastRequiredNonMaskPos = tests.length - 1)) : tests.push(null);\r\n            }), this.trigger(\"unmask\").each(function() {\r\n                function tryFireCompleted() {\r\n                    if (settings.completed) {\r\n                        for (var i = firstNonMaskPos; lastRequiredNonMaskPos >= i; i++) if (tests[i] && buffer[i] === getPlaceholder(i)) return;\r\n                        settings.completed.call(input);\r\n                    }\r\n                }\r\n                function getPlaceholder(i) {\r\n                    return settings.placeholder.charAt(i < settings.placeholder.length ? i : 0);\r\n                }\r\n                function seekNext(pos) {\r\n                    for (;++pos < len && !tests[pos]; ) ;\r\n                    return pos;\r\n                }\r\n                function seekPrev(pos) {\r\n                    for (;--pos >= 0 && !tests[pos]; ) ;\r\n                    return pos;\r\n                }\r\n                function shiftL(begin, end) {\r\n                    var i, j;\r\n                    if (!(0 > begin)) {\r\n                        for (i = begin, j = seekNext(end); len > i; i++) if (tests[i]) {\r\n                            if (!(len > j && tests[i].test(buffer[j]))) break;\r\n                            buffer[i] = buffer[j], buffer[j] = getPlaceholder(j), j = seekNext(j);\r\n                        }\r\n                        writeBuffer(), input.caret(Math.max(firstNonMaskPos, begin));\r\n                    }\r\n                }\r\n                function shiftR(pos) {\r\n                    var i, c, j, t;\r\n                    for (i = pos, c = getPlaceholder(pos); len > i; i++) if (tests[i]) {\r\n                        if (j = seekNext(i), t = buffer[i], buffer[i] = c, !(len > j && tests[j].test(t))) break;\r\n                        c = t;\r\n                    }\r\n                }\r\n                function androidInputEvent() {\r\n                    var curVal = input.val(), pos = input.caret();\r\n                    if (oldVal && oldVal.length && oldVal.length > curVal.length) {\r\n                        for (checkVal(!0); pos.begin > 0 && !tests[pos.begin - 1]; ) pos.begin--;\r\n                        if (0 === pos.begin) for (;pos.begin < firstNonMaskPos && !tests[pos.begin]; ) pos.begin++;\r\n                        input.caret(pos.begin, pos.begin);\r\n                    } else {\r\n                        for (checkVal(!0); pos.begin < len && !tests[pos.begin]; ) pos.begin++;\r\n                        input.caret(pos.begin, pos.begin);\r\n                    }\r\n                    tryFireCompleted();\r\n                }\r\n                function blurEvent() {\r\n                    checkVal(), input.val() != focusText && input.change();\r\n                }\r\n                function keydownEvent(e) {\r\n                    if (!input.prop(\"readonly\")) {\r\n                        var pos, begin, end, k = e.which || e.keyCode;\r\n                        oldVal = input.val(), 8 === k || 46 === k || iPhone && 127 === k ? (pos = input.caret(), \r\n                        begin = pos.begin, end = pos.end, end - begin === 0 && (begin = 46 !== k ? seekPrev(begin) : end = seekNext(begin - 1), \r\n                        end = 46 === k ? seekNext(end) : end), clearBuffer(begin, end), shiftL(begin, end - 1), \r\n                        e.preventDefault()) : 13 === k ? blurEvent.call(this, e) : 27 === k && (input.val(focusText), \r\n                        input.caret(0, checkVal()), e.preventDefault());\r\n                    }\r\n                }\r\n                function keypressEvent(e) {\r\n                    if (!input.prop(\"readonly\")) {\r\n                        var p, c, next, k = e.which || e.keyCode, pos = input.caret();\r\n                        if (!(e.ctrlKey || e.altKey || e.metaKey || 32 > k) && k && 13 !== k) {\r\n                            if (pos.end - pos.begin !== 0 && (clearBuffer(pos.begin, pos.end), shiftL(pos.begin, pos.end - 1)), \r\n                            p = seekNext(pos.begin - 1), len > p && (c = String.fromCharCode(k), tests[p].test(c))) {\r\n                                if (shiftR(p), buffer[p] = c, writeBuffer(), next = seekNext(p), android) {\r\n                                    var proxy = function() {\r\n                                        $.proxy($.fn.caret, input, next)();\r\n                                    };\r\n                                    setTimeout(proxy, 0);\r\n                                } else input.caret(next);\r\n                                pos.begin <= lastRequiredNonMaskPos && tryFireCompleted();\r\n                            }\r\n                            e.preventDefault();\r\n                        }\r\n                    }\r\n                }\r\n                function clearBuffer(start, end) {\r\n                    var i;\r\n                    for (i = start; end > i && len > i; i++) tests[i] && (buffer[i] = getPlaceholder(i));\r\n                }\r\n                function writeBuffer() {\r\n                    input.val(buffer.join(\"\"));\r\n                }\r\n                function checkVal(allow) {\r\n                    var i, c, pos, test = input.val(), lastMatch = -1;\r\n                    for (i = 0, pos = 0; len > i; i++) if (tests[i]) {\r\n                        for (buffer[i] = getPlaceholder(i); pos++ < test.length; ) if (c = test.charAt(pos - 1), \r\n                        tests[i].test(c)) {\r\n                            buffer[i] = c, lastMatch = i;\r\n                            break;\r\n                        }\r\n                        if (pos > test.length) {\r\n                            clearBuffer(i + 1, len);\r\n                            break;\r\n                        }\r\n                    } else buffer[i] === test.charAt(pos) && pos++, partialPosition > i && (lastMatch = i);\r\n                    return allow ? writeBuffer() : partialPosition > lastMatch + 1 ? settings.autoclear || buffer.join(\"\") === defaultBuffer ? (input.val() && input.val(\"\"), \r\n                    clearBuffer(0, len)) : writeBuffer() : (writeBuffer(), input.val(input.val().substring(0, lastMatch + 1))), \r\n                    partialPosition ? i : firstNonMaskPos;\r\n                }\r\n                var input = $(this), buffer = $.map(mask.split(\"\"), function(c, i) {\r\n                    return \"?\" != c ? defs[c] ? getPlaceholder(i) : c : void 0;\r\n                }), defaultBuffer = buffer.join(\"\"), focusText = input.val();\r\n                input.data($.mask.dataName, function() {\r\n                    return $.map(buffer, function(c, i) {\r\n                        return tests[i] && c != getPlaceholder(i) ? c : null;\r\n                    }).join(\"\");\r\n                }), input.one(\"unmask\", function() {\r\n                    input.off(\".mask\").removeData($.mask.dataName);\r\n                }).on(\"focus.mask\", function() {\r\n                    if (!input.prop(\"readonly\")) {\r\n                        clearTimeout(caretTimeoutId);\r\n                        var pos;\r\n                        focusText = input.val(), pos = checkVal(), caretTimeoutId = setTimeout(function() {\r\n                            input.get(0) === document.activeElement && (writeBuffer(), pos == mask.replace(\"?\", \"\").length ? input.caret(0, pos) : input.caret(pos));\r\n                        }, 10);\r\n                    }\r\n                }).on(\"blur.mask\", blurEvent).on(\"keydown.mask\", keydownEvent).on(\"keypress.mask\", keypressEvent).on(\"input.mask paste.mask\", function() {\r\n                    input.prop(\"readonly\") || setTimeout(function() {\r\n                        var pos = checkVal(!0);\r\n                        input.caret(pos), tryFireCompleted();\r\n                    }, 0);\r\n                }), chrome && android && input.off(\"input.mask\").on(\"input.mask\", androidInputEvent), \r\n                checkVal();\r\n            });\r\n        }\r\n    });\r\n});"]}